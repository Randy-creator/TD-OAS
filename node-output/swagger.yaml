openapi: 3.0.0
info:
  title: Library management
  description: The API for managing the books and authors in a library
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/HEIRANDY2/TD_OAS/1.0.0
  description: SwaggerHub API Auto Mocking
paths:
  /books:
    get:
      summary: Get a list of books
      description: FInd all books by `bookName` or `releaseDate`
      parameters:
      - name: bookName
        in: query
        description: find by book name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: releaseDate
        in: query
        description: find by date
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: A list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Books'
    put:
      summary: Update or replace a book
      description: Updating infos/details of a book
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Books'
        required: true
      responses:
        "200":
          description: the book has been updated
    post:
      summary: Add a new book
      description: Add a book
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Books'
        required: true
      responses:
        "201":
          description: the book has been added
    delete:
      summary: delete a book
      description: delete a book from the library by his id
      parameters:
      - name: id
        in: query
        description: the id of the book that will be deleted
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: the books have been deleted succesfully
  /authors:
    get:
      summary: List of authors
      description: Find all authors  by `authorName`
      parameters:
      - name: authorName
        in: query
        description: Find by author name`
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: A list of all authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
    put:
      summary: Update an author
      description: Replace an existing author's details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
        required: true
      responses:
        "200":
          description: The author's infos has been updated succesfully
    post:
      summary: Add new author
      description: Add an author to the library
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
        required: true
      responses:
        "201":
          description: the author has been added succesfully
components:
  schemas:
    Books:
      required:
      - author
      - bookName
      - id
      - pageNumbers
      - releaseDate
      - topic
      type: object
      properties:
        id:
          type: string
          description: the identifiant of the book
        bookName:
          type: string
          description: The book's name
        author:
          type: string
          description: the author's name or his/her pseudonyme
        pageNumbers:
          type: integer
          description: The number of pages in the book
        topic:
          type: string
          description: The genre(s) of the book
          enum:
          - ROMANCE
          - COMEDY
          - OTHER
        releaseDate:
          type: string
          description: Date where the books was released
          format: date
    Author:
      required:
      - Name
      - id
      - sex
      type: object
      properties:
        id:
          type: string
          description: The identifiant of the author
        Name:
          type: string
          description: name of the author
        sex:
          type: string
          description: Gender of the author
          enum:
          - M
          - F
